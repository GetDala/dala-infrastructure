AWSTemplateFormatVersion: '2010-09-09'
Description: Dala CloudFormation Infrastructure Stack
Parameters:
  KeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: SSH key that will be used for EC2 instances (set up in web console)
    ConstraintDescription: needs to be an existing EC2 keypair (set up in web console)
  SSHAllowIPAddress:
    Type: String
    AllowedPattern: '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/0'
    Description: IP address to allow SSH from (only /32s allowed)
    ConstraintDescription: needs to be in A.B.C.D/32 form
  StackRegion:
    Type: String
    Description: The region that your stack will deployed to
Resources:
  DalaVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.8.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Dala-vpc
  DalaPublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: public
      VpcId:
        Ref: DalaVPC
      AvailabilityZone: 
          Fn::Sub: "${StackRegion}a"
  DalaPublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.6.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: public
      VpcId:
        Ref: DalaVPC
      AvailabilityZone: 
          Fn::Sub: "${StackRegion}b"
  DalaPublicSubnetC:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.5.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: public
      VpcId:
        Ref: DalaVPC
      AvailabilityZone:
          Fn::Sub: "${StackRegion}c"
  DalaPrivateSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: private
      VpcId:
        Ref: DalaVPC
      AvailabilityZone: 
          Fn::Sub: "${StackRegion}a"
  DalaPrivateSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: private
      VpcId:
        Ref: DalaVPC
      AvailabilityZone:
          Fn::Sub: "${StackRegion}b"
  DalaPrivateSubnetC:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.8.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Dala-subnet
        - Key: subnet-type
          Value: private
      VpcId:
        Ref: DalaVPC
      AvailabilityZone: 
          Fn::Sub: "${StackRegion}c"
  DalaInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: DalaInternetGateway
  DalaInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId:
        Ref: DalaInternetGateway
      VpcId:
        Ref: DalaVPC
  DalaPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: DalaVPC
      Tags:
        - Key: Name
          Value: Dala-routetable
        - Key: routetable-type
          Value: public
  DalaPublicDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: DalaInternetGateway
      RouteTableId:
        Ref: DalaPublicRouteTable
  DalaPublicSubnet1Assoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPublicSubnet
      RouteTableId:
        Ref: DalaPublicRouteTable
  DalaPublicSubnet2Assoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPublicSubnetB
      RouteTableId:
        Ref: DalaPublicRouteTable
  DalaPublicSubnet3Assoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPublicSubnetC
      RouteTableId:
        Ref: DalaPublicRouteTable
  DalaPrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: DalaVPC
      Tags:
        - Key: Name
          Value: Dala-routetable
        - Key: routetable-type
          Value: private
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
        AllocationId:
            'Fn::GetAtt':
            - ElasticIp
            - AllocationId
        SubnetId:
            Ref: DalaPublicSubnet
  ElasticIp:
      Type: 'AWS::EC2::EIP'
      DependsOn: DalaInternetGatewayAttachment
      Properties:
          Domain: vpc  
  DalaPrivateDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway
      RouteTableId:
        Ref: DalaPrivateRouteTable
  DalaPrivateSubnetAAssoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPrivateSubnetA
      RouteTableId:
        Ref: DalaPrivateRouteTable
  DalaPrivateSubnetBAssoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPrivateSubnetB
      RouteTableId:
        Ref: DalaPrivateRouteTable
  DalaPrivateSubnetCAssoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: DalaPrivateSubnetC
      RouteTableId:
        Ref: DalaPrivateRouteTable
  DalaNatSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      Tags:
        - Key: Name
          Value: Dala-sg
      GroupDescription: NAT (External) Dala security group
      VpcId:
        Ref: DalaVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 10.8.1.0/24
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 10.8.1.0/24
          FromPort: '443'
          ToPort: '443'
        - IpProtocol: tcp
          CidrIp: 10.8.2.0/24
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 10.8.2.0/24
          FromPort: '443'
          ToPort: '443'
        - IpProtocol: tcp
          CidrIp: 10.8.3.0/24
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '8443'
          ToPort: '8443'
        - IpProtocol: tcp
          CidrIp: 10.8.3.0/24
          FromPort: '443'
          ToPort: '443'
        - IpProtocol: tcp
          CidrIp:
            Ref: SSHAllowIPAddress
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '30303'
          ToPort: '30303'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '3000'
          ToPort: '3000'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '8545'
          ToPort: '8545'
      SecurityGroupEgress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '443'
          ToPort: '443'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '8443'
          ToPort: '8443'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '30303'
          ToPort: '30303'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '3000'
          ToPort: '3000'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '8545'
          ToPort: '8545'
  DalaPrivateSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      Tags:
        - Key: Name
          Value: Dala-sg
      GroupDescription: Private (Internal) Dala security group
      VpcId:
        Ref: DalaVPC
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  DalaElbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      Tags:
        - Key: Name
          Value: Dala-sg
      GroupDescription: ELB (load balancer) Dala security group
      VpcId:
        Ref: DalaVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '443'
          ToPort: '443'
      SecurityGroupEgress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '443'
          ToPort: '443'
    
  LogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: LogRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: 'arn:aws:logs:*:*:*'
          - Effect: Allow
            Action:
            - "cloudformation:Describe*"
            - "cloudformation:List*"
            - "cloudformation:Get*"
            - "cloudformation:PreviewStackUpdate"
            - "cloudformation:SignalResource"
            Resource: '*'
          - Effect: Allow
            Action:
            - "lambda:GetFunction"
            - "lambda:InvokeFunction"
            Resource: 
              'Fn::Sub': "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:dala-wallet*"
  DalaInstaceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: LogRole
  CloudFormationLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

Outputs:
  DalaInstanceRole:
    Description: The instace roles that is attached to the instances
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-DalaInstanceRoleArn
    Value: 
        Ref: DalaInstaceProfile
  DalaInstaceSecurityGroup:
    Description: Security Group for the the server instances
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-DalaInstanceSecurityGroupId
    Value:
      'Fn::GetAtt':
        - DalaPrivateSecurityGroup
        - GroupId
  DalaPrivateSubnetA:
    Description: Private Subnet in AvailabilityZone a
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PrivateSubnetAId
    Value:
      Ref: DalaPrivateSubnetA
  DalaPrivateSubnetB:
    Description: Private Subnet in AvailabilityZone b
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PrivateSubnetBId
    Value:
      Ref: DalaPrivateSubnetB
  DalaPrivateSubnetC:
    Description: Private Subnet in AvailabilityZone c
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PrivateSubnetCId
    Value:
      Ref: DalaPrivateSubnetC
  DalaPublicSubnetA:
    Description: Public Subnet in AvailabilityZone a
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PublicSubnetAId
    Value:
      Ref: DalaPublicSubnet
  DalaPublicSubnetB:
    Description: Public Subnet in AvailabilityZone b
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PublicSubnetBId
    Value:
      Ref: DalaPublicSubnetB
  DalaPublicSubnetC:
    Description: Public Subnet in AvailabilityZone c
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-PublicSubnetCId
    Value:
      Ref: DalaPublicSubnetC
  DalaVPC:
    Description: Dala VPC
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-DalaVPC
    Value:
      Ref: DalaVPC
  DalaServerLogs:
    Description: LogGroup for all the server logs
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-DalaServerLogs
    Value:
      Ref: CloudFormationLogs