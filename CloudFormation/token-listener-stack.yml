AWSTemplateFormatVersion: '2010-09-09'
Description: Wala TokenListener CloudFormation Server Stack
Parameters:
  KeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: SSH key that will be used for EC2 instances (set up in web console)
    ConstraintDescription: needs to be an existing EC2 keypair (set up in web console)
  DalaInfrastructureStackName:
    Type: String
    Description: The Dala Infrastructure StackName
  TOKENADDRESS:
    Type: String
    Description: The dala token address
  RPCSERVERINFURA:
    Type: String
  RPCSERVERPARITY:
    Type: String

Resources:
  TokenListenerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      Tags:
        - Key: Name
          Value: TokenListener-sg
      GroupDescription: TokenListener Security Group
      VpcId:
        'Fn::ImportValue': 
           'Fn::Sub': "${DalaInfrastructureStackName}-DalaVPC"
      SecurityGroupIngress:
          - IpProtocol: '-1'
            CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
          - IpProtocol: '-1'
            CidrIp: 0.0.0.0/0  


  TokenListenerServerGroupInfura:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: '1'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Properties:
      VPCZoneIdentifier:
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetAId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetBId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetCId"
      LaunchConfigurationName:
         Ref: TokenListenerInfuraLaunchConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      Tags:
        - Key: Name
          Value: tokenListener-web-server-infura
          PropagateAtLaunch: true
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30

  TokenListenerServerGroupParity:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: '1'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Properties:
      VPCZoneIdentifier:
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetAId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetBId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetCId"
      LaunchConfigurationName:
         Ref: TokenListenerParityLaunchConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      Tags:
        - Key: Name
          Value: tokenListener-web-server-parity
          PropagateAtLaunch: true
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30     

  TokenListenerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: TokenListenerLogs

  TokenInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: LogRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: 'arn:aws:logs:*:*:*'
          - Effect: Allow
            Action:
            - "cloudformation:Describe*"
            - "cloudformation:List*"
            - "cloudformation:Get*"
            - "cloudformation:PreviewStackUpdate"
            - "cloudformation:SignalResource"
            Resource: '*' 
          - Effect: Allow
            Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            Resource: 
              "Fn::Sub": arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/DalaTokenEvents  

  TokenListenerInstaceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: TokenInstanceRole

  TokenListenerInfuraLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-c1167eb8
      AssociatePublicIpAddress: false
      IamInstanceProfile:
        Ref: TokenListenerInstaceProfile
      InstanceType: t2.micro
      KeyName:
        Ref: KeyPair
      SecurityGroups:
        - Ref: TokenListenerSecurityGroup
      UserData:
        "Fn::Base64":
          "Fn::Sub": 
              |
                      #!/bin/bash
                      apt-get update -y 
                      apt-get -y install python-setuptools python-pip
                      pip install awscli --upgrade --user
                      mkdir aws-cfn-bootstrap-latest
                      curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1
                      easy_install aws-cfn-bootstrap-latest
                      curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
                      apt-get install -y nodejs
                      npm install -g npm
                      npm install forever -g
                      curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O

                      #setup the logs 

                      [ -e /etc/awslogs/awslogs.conf ] && rm /etc/awslogs/awslogs.conf
                      mkdir -p /etc/awslogs/
                      touch /etc/awslogs/awslogs.conf
                      echo "[general] 
                      state_file = /var/awslogs/state/agent-state 
                      region = ${AWS::Region}
                      [/dala-wallet/tokenlistners.logs] 
                      file = /dala-wallet/tokenlistners.logs
                      log_group_name = ${TokenListenerLogs}  
                      log_stream_name = tokenlistners
                      datetime_format =%b %d %H:%M:%S
                      
                      " >  /etc/awslogs/awslogs.conf

                      python ./awslogs-agent-setup.py --region ${AWS::Region} --non-interactive  --configfile=/etc/awslogs/awslogs.conf

                      cd /

                      # This is where we install the DalaWallet
                      git clone https://github.com/GetDala/dala-wallet.git
                      cd dala-wallet 
                      npm install 
                      echo "#!/bin/bash
                      export INSTANCE_ID=`curl http://169.254.169.254/latest/meta-data/instance-id`
                      export RPC_SERVER=${RPCSERVERINFURA}
                      export TOKEN_ADDRESS=${TOKENADDRESS}
                      export AWS_REGION=${AWS::Region}
                      /usr/bin/forever start --uid dalaTokenListener --sourceDir /dala-wallet/src/blockchain -l /dala-wallet/tokenlistners.logs -e /dala-wallet/tokenlistners.logs --append --minUptime 5000 --spinSleepTime 2000 -m 100 token-listener.js" > startListner.sh 
                      chmod +x startListner.sh
                      sh startListner.sh
                      /usr/local/bin/cfn-signal -e 0 --region ${AWS::Region} --stack ${AWS::StackName} --resource TokenListenerServerGroupInfura

  TokenListenerParityLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-c1167eb8
      AssociatePublicIpAddress: false
      IamInstanceProfile:
        Ref: TokenListenerInstaceProfile
      InstanceType: t2.micro
      KeyName:
        Ref: KeyPair
      SecurityGroups:
        - Ref: TokenListenerSecurityGroup
      UserData:
        "Fn::Base64":
          "Fn::Sub": 
              |
                      #!/bin/bash
                      apt-get update -y 
                      apt-get -y install python-setuptools python-pip
                      pip install awscli --upgrade --user
                      mkdir aws-cfn-bootstrap-latest
                      curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1
                      easy_install aws-cfn-bootstrap-latest
                      curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
                      apt-get install -y nodejs
                      npm install -g npm
                      npm install forever -g
                      curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O

                      #setup the logs 

                      [ -e /etc/awslogs/awslogs.conf ] && rm /etc/awslogs/awslogs.conf
                      mkdir -p /etc/awslogs/
                      touch /etc/awslogs/awslogs.conf
                      echo "[general] 
                      state_file = /var/awslogs/state/agent-state 
                      region = ${AWS::Region}
                      [/dala-wallet/tokenlistners.logs] 
                      file = /dala-wallet/tokenlistners.logs
                      log_group_name = ${TokenListenerLogs}  
                      log_stream_name = tokenlistners
                      datetime_format =%b %d %H:%M:%S
                      
                      " >  /etc/awslogs/awslogs.conf

                      python ./awslogs-agent-setup.py --region ${AWS::Region} --non-interactive  --configfile=/etc/awslogs/awslogs.conf

                      cd /

                      # This is where we install the DalaWallet
                      git clone https://github.com/GetDala/dala-wallet.git
                      cd dala-wallet 
                      npm install 
                      echo "#!/bin/bash
                      export INSTANCE_ID=`curl http://169.254.169.254/latest/meta-data/instance-id`
                      export RPC_SERVER=${RPCSERVERPARITY}
                      export TOKEN_ADDRESS=${TOKENADDRESS}
                      export AWS_REGION=${AWS::Region}
                      /usr/bin/forever start --uid dalaTokenListener --sourceDir /dala-wallet/src/blockchain -l /dala-wallet/tokenlistners.logs -e /dala-wallet/tokenlistners.logs --append --minUptime 5000 --spinSleepTime 2000 -m 100 token-listener.js" > startListner.sh 
                      chmod +x startListner.sh
                      sh startListner.sh
                      /usr/local/bin/cfn-signal -e 0 --region ${AWS::Region} --stack ${AWS::StackName} --resource TokenListenerServerGroupParity
