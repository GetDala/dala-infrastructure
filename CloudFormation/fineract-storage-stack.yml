AWSTemplateFormatVersion: '2010-09-09'
Description: Dala Fineract CloudFormation Storage Stack
Parameters:
  FineractDatabaseUsername:
    Type: String
    Description: Master username for the fineract database
  FineractDatabasePassword:
    Type: String
    Description: Master password for the fineract database
  StackRegion:
    Type: String
    Description: The region that your stack will deployed to
  DalaInfrastructureStackName:
    Type: String
    Description: The stackname of the dala infrastructure stack
Resources:
  DBCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      AvailabilityZones:
        - Fn::Sub: "${StackRegion}a"
        - Fn::Sub: "${StackRegion}b"
        - Fn::Sub: "${StackRegion}c"
      BackupRetentionPeriod: 10
      DatabaseName: fineract
      DBSubnetGroupName:
        Ref: FineractRDSSubnetGroup
      Engine: aurora
      MasterUsername:
        Ref: FineractDatabaseUsername
      MasterUserPassword:
        Ref: FineractDatabasePassword
      StorageEncrypted: true
      DBClusterParameterGroupName:
        Ref: RDSDBClusterParameterGroup
      VpcSecurityGroupIds:
        - "Fn::GetAtt": FineractStorageSecurityGroup.GroupId
  DBInstanceXLLarge:
    Type: 'AWS::RDS::DBInstance'
    DependsOn: FineractStorageSecurityGroup
    Properties:
      DBInstanceClass: db.r4.xlarge
      Engine: aurora
      PubliclyAccessible: false
      DBClusterIdentifier:
        Ref: DBCluster
      AvailabilityZone:
          Fn::Sub: "${StackRegion}b"

  DBInstanceXLLargeReplica:
    Type: 'AWS::RDS::DBInstance'
    DependsOn: FineractStorageSecurityGroup
    Properties:
      DBInstanceClass: db.r4.large
      Engine: aurora
      PubliclyAccessible: false
      DBClusterIdentifier:
        Ref: DBCluster
      AvailabilityZone:
          Fn::Sub: "${StackRegion}b"

  RDSDBClusterParameterGroup:
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: Aurora Cluster Parameter Group
      Family: aurora5.6
      Parameters:
        time_zone: UTC
  FineractRDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: FineractRDSSubnetGroup - RDS Subnet Group
      SubnetIds:
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetAId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetBId"
        - 'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-PrivateSubnetCId"
  FineractStorageSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Ingress RDS Instance
      VpcId:
          'Fn::ImportValue': 
            'Fn::Sub': "${DalaInfrastructureStackName}-DalaVPC"
      SecurityGroupIngress:
        - IpProtocol: '-1'
          SourceSecurityGroupId:
            'Fn::ImportValue': 
              'Fn::Sub': "${DalaInfrastructureStackName}-DalaInstanceSecurityGroupId"
              
Outputs:
  FineractDBClusterEndpointAddress:
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-FineractDBClusterEndpointAddress
    Value:
        Fn::GetAtt:
            - DBCluster
            - Endpoint.Address
  FineractDBClusterEndpointPort:
    Export:
      Name: 
        'Fn::Sub': ${AWS::StackName}-FineractDBClusterEndpointPort
    Value:
        Fn::GetAtt:
            - DBCluster
            - Endpoint.Port